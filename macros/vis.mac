# Use this open statement to create an OpenGL view:
/vis/open OGL

# Draw geometry:
/vis/drawVolume

# Draw smooth trajectories
/vis/scene/add/trajectories smooth

# Show world volume:
/vis/geometry/set/visibility World 0 true

# Specify view angle and rotation
/vis/viewer/set/viewpointVector 0 -1 0
/vis/viewer/set/lightsVector 0 -1 0
/vis/viewer/set/upVector 1 0 0
/vis/viewer/set/rotationStyle constrainUpDirection

# Draw coordinate axes:
/vis/scene/add/axes 0 0 0 1 m

# To superimpose all of the events from a given run:
/vis/scene/endOfEventAction accumulate

#------------------------------------------------------

# Specify style (surface or wireframe):
# /vis/viewer/set/style wireframe

# Disable auto refresh and quieten vis messages whilst scene and
# trajectories are established:
# /vis/viewer/set/autoRefresh false
# /vis/verbose errors

# /vis/viewer/set/autoRefresh true
# /vis/verbose warnings

# Specify zoom value:
# /vis/viewer/zoom 1

# Set white background
# /vis/viewer/set/background white

# Draw smooth trajectories at end of event, showing trajectory points
# as markers 2 pixels wide:
# /vis/scene/add/trajectories smooth
# /vis/modeling/trajectories/create/drawByCharge
# /vis/modeling/trajectories/drawByCharge-0/default/setDrawStepPts true
# /vis/modeling/trajectories/drawByCharge-0/default/setStepPtsSize 2